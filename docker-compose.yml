# Documentation
# https://docs.docker.com/compose/compose-file

version: "3"

services:
  # EVENT STORE
  eventstore:
    build:
      context: './src/services/eventstore'
    restart: always
    ports:
      - 2113:2113
      - 1113
    network_mode: bridge
    healthcheck:
      test: ['CMD', 'WGET', '--spider', 'http://localhost:2113']
  # DATABASE - MONGODB
  mongodb:
    build:
      context: './src/services/mongo'
    restart: always
    ports:
      - 27017:27017
    network_mode: bridge
    healthcheck:
      test: ['CMD', 'pgrep', 'mongo']
  core:
    build:
      context: "./src/core"
    restart: always
    ports:
      - 5000:5000
    expose:
      - 5000
    network_mode: bridge
  # API - VISPEECH
  vispeech:
    build:
      context: "./src/server"
    command: "npm run start:prod"
    restart: always
    depends_on:
      - eventstore
      - mongodb
    environment:
      - EVENT_STORE_HOSTNAME=eventstore
    ports:
      - 7070:7070
    expose:
      - 7070
    links:
      - eventstore
      - mongodb
    healthcheck:
      test: ['CMD', 'pgrep', 'vispeech']
    network_mode: bridge
  vispeechui:
    build:
      context: "./src/client"
    command: "npm run start:prod"
    restart: always
    depends_on:
      - eventstore
      - mongodb
      - vispeech
    ports:
      - 80:80
    expose:
      - 80
    network_mode: bridge
  vispeechrelease:
    build:
      context: "./src/release"
    command: "npm run start"
    restart: always
    depends_on:
      - eventstore
      - mongodb
      - vispeech
    ports:
      - 3200:3200
    expose:
      - 3200
    links:
      - eventstore
      - mongodb
    #  - vispeech
    network_mode: bridge
  redis:
    build:
      context: './src/services/redis'
    ports:
    - 6379:6379
  zoo1:
    build:
      context: './src/services/zookeeper'
    hostname: zoo1
    ports:
      - 2181:2181
    volumes:
      - ./zk-single-kafka-single/zoo1/data:/dat
      - ./zk-single-kafka-single/zoo1/datalog:/datalog
    network_mode: bridge
    healthcheck:
      test: ['CMD', 'pgrep', 'zoo1']
  kafka1:
    build:
      context: './src/services/kafka'
    hostname: kafka1
    ports:
      - 9092:9092
    expose:
      - 9092
    volumes:
      - ./zk-single-kafka-single/kafka1/data:/var/lib/kafka/data
    depends_on:
      - zoo1
    links:
      - zoo1
    healthcheck:
      test: ['CMD', 'pgrep', 'kafka1']
    network_mode: bridge
