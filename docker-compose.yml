# Documentation
# https://docs.docker.com/compose/compose-file

version: "3"

services:
  # EVENT STORE
  eventstore:
    image: eventstore/eventstore
    ports:
      - 2113:2113
      - 1113:1113
    expose:
      - 2113
    environment:
      - EVENTSTORE_RUN_PROJECTIONS=All
      - EVENTSTORE_START_STANDARD_PROJECTIONS=true
    network_mode: bridge
  # DATABASE - MYSQL
  mongodb:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongodb
      MONGO_DATABASE: vispeech
    ports:
      - 27017:27017
    network_mode: bridge
  # API - VISPEECH
  vispeech:
    build:
      context: "."
    command: ${CONTAINER_COMMAND}
    restart: always
    depends_on:
      - eventstore
      - mongodb
    environment:
      - EVENT_STORE_HOSTNAME=eventstore
    ports:
      - ${VISPEECH_PORT}:${VISPEECH_PORT}
    expose:
      - ${VISPEECH_PORT}
    links:
      - eventstore
      - mongodb
    network_mode: bridge
  vispeechdemo:
    build:
      context: "./ViSpeechDemo"
    command: "npm start"
    restart: always
    depends_on:
      - eventstore
      - mongodb
      - vispeech
    ports:
      - ${VISPEECH_PORT_DEMO}:${VISPEECH_PORT_DEMO}
    expose:
      - ${VISPEECH_PORT_DEMO}
    links:
      - eventstore
      - mongodb
    #  - vispeech
    network_mode: bridge
  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo1:2888:3888
    network_mode: bridge
  kafka1:
    image: confluentinc/cp-kafka:5.4.0
    hostname: kafka1
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka1:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zoo1
